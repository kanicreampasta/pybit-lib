from pybit.bits import Bits
from pybit.multiplication import Multiplication

# Question 1 (CLA)
print("========Q1========")
X1 = Bits.from_bin('10111101')
Y1 = Bits.from_bin('10101111')
P, G, CO, S = Multiplication.CLA(X1, Y1, CI0=0, size=8)

# (a)
print("P: ", P.hex)
# (b)
print("G: ", G.hex)
# (c)
print("S: ", S.hex)
# (d)
print("CO: ", CO.hex)

# Question2
print("========Q2========")
X2 = Bits.from_bin('010111')
Y2 = Bits.from_bin('001011')
ans = Multiplication.booth_secondary(X2, Y2)

# (a)
print("(a): ", ans[0].hex)
# (b)
print("(b): ", ans[1].hex)
# (c)
print("(c): ", ans[2].hex)
# (d)
print("(d): ", ans[3].hex)

# Question3
print("========Q3========")
X3 = Bits.from_bin('100010')
Y3 = Bits.from_bin('001110')
ans2 = Multiplication.booth_secondary(X3, Y3, Apositive=True)

# (a)
print("(a): ", ans2[0].hex)
# (b)
print("(b): ", ans2[1].hex)
# (c)
print("(c): ", ans2[2].hex)
# (d)
print("(d): ", ans2[3].hex)

# Question4
print("========Q4========")
X4 = Bits.from_bin('101111')
Y4 = Bits.from_bin('011010')
pp = Multiplication.partial_product(X4, Y4, size=6)
CSA0 = Multiplication.CSA(pp[0], pp[1], pp[2], size=12)
CSA1 = Multiplication.CSA(pp[3], pp[4], pp[5], size=12)
CSA2 = Multiplication.CSA(CSA0[0], CSA0[1], CSA1[0], size=12)
CSA3 = Multiplication.CSA(CSA1[1], CSA2[0], CSA2[1], size=12)

# (a)
print("(a): ", CSA0[0].hex)
# (b)
print("(b): ", CSA0[1].hex)
# (c)
print("(c): ", CSA1[0].hex)
# (d)
print("(d): ", CSA1[1].hex)
# (e)
print("(e): ", CSA2[0].hex)
# (f)
print("(f): ", CSA2[1].hex)
# (g)
print("(g): ", CSA3[0].hex)
# (h)
print("(h): ", CSA3[1].hex)
# (i)
print("(i): ", (CSA3[0] + CSA3[1]).hex)